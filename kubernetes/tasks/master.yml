- name: Check for an already generated token
  become: no
  stat: path={{ playbook_dir }}/run/kubeadm-token.txt
  delegate_to: localhost
  register: kubeadm_token

- block:
  - name: Create a token from master
    command: kubeadm token generate
    register: kubeadm_gen_token
  - name: Copy token to local file 'kubernetes-token'
    become: no
    copy: content={{ kubeadm_gen_token.stdout }} dest={{ playbook_dir }}/run/kubeadm-token.txt
    delegate_to: localhost
  when: kubeadm_token.stat.exists == false and mode == "master"

- name: Register token as fact
  set_fact:
    kubeadm_token: "{{ lookup('file', playbook_dir + '/run/kubeadm-token.txt') }}"

- name: Copy init file for kubeadm
  template: src=kubeadm.yml dest=/etc/kubernetes/kubeadm.yml mode=0755

- name: Run kubeadm reset on master
  command: kubeadm reset 
  register: kubeadm_reset

- name: Run kubeadm init on master
  command: kubeadm init --config /etc/kubernetes/kubeadm.yml
  register: kubeadm_init

- name: Copy Kubernetes access config to ~/.kube/config on nodes
  copy: remote_src=True src=/etc/kubernetes/admin.conf dest=/home/pi/.kube/config owner=pi

# - debug: var=kubeadm_init.stdout

- name: Download cluster configuration
  fetch:
    src: "/etc/kubernetes/admin.conf"
    dest: "{{ playbook_dir }}/run/"
    flat: true

- name: Rename cluster configuration
  become: no
  command: mv {{ playbook_dir }}/run/admin.conf {{ playbook_dir }}/run/pi-cluster.cfg
  delegate_to: localhost

- name: Install CNI plugin for {{ overlay_network }}
  include: cni/{{ overlay_network }}.yml

- name: Download cluster configuration
  fetch:
    src: "/etc/kubernetes/admin.conf"
    dest: "{{ playbook_dir }}/run/"
    flat: true
  
